function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}Auth.prototype.run=function(){var n=this;n.listenShowHideEvent(),n.listenSwitchEvent(),n.listenSigninEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var n=this,t=$(".signin-btn"),e=$(".signup-btn"),o=$(".close-btn");t.click(function(){n.showEvent(),n.scrollWrapper.css({left:0})}),e.click(function(){n.showEvent(),n.scrollWrapper.css({left:-400})}),o.click(function(){n.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var t=this;$(".switch").click(function(){var n=t.scrollWrapper.css("left");(n=parseInt(n))<0?t.scrollWrapper.animate({left:"0"}):t.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenSigninEvent=function(){var n=$(".signin-group"),o=n.find("input[name='telephone']"),i=n.find("input[name='password']"),s=n.find("input[name='remember']");n.find(".submit-btn").click(function(){var n=o.val(),t=i.val(),e=s.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:n,password:t,remember:e?1:0},success:function(n){console.log("============="),console.log(n),console.log("=============")},fail:function(n){console.log("xxxxxxxxxxxxxxx"),console.log(n),console.log("xxxxxxxxxxxxxxx")}})})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiQXV0aCIsInRoaXMiLCJtYXNrV3JhcHBlciIsIiQiLCJzY3JvbGxXcmFwcGVyIiwicHJvdG90eXBlIiwicnVuIiwic2VsZiIsImxpc3RlblNob3dIaWRlRXZlbnQiLCJsaXN0ZW5Td2l0Y2hFdmVudCIsImxpc3RlblNpZ25pbkV2ZW50Iiwic2hvd0V2ZW50Iiwic2hvdyIsImhpZGVFdmVudCIsImhpZGUiLCJzaWduaW5CdG4iLCJzaWdudXBCdG4iLCJjbG9zZUJ0biIsImNsaWNrIiwiY3NzIiwibGVmdCIsImN1cnJlbnRMZWZ0IiwicGFyc2VJbnQiLCJhbmltYXRlIiwic2lnbmluR3JvdXAiLCJ0ZWxlcGhvbmVJbnB1dCIsImZpbmQiLCJwYXNzd29yZElucHV0IiwicmVtZW1iZXJJbnB1dCIsInRlbGVwaG9uZSIsInZhbCIsInBhc3N3b3JkIiwicmVtZW1iZXIiLCJwcm9wIiwieGZ6YWpheCIsInBvc3QiLCJ1cmwiLCJkYXRhIiwic3VjY2VzcyIsInJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJmYWlsIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUNBLFNBQVNBLE9BQ0lDLEtBQ0pDLFlBQWNDLEVBQUUsaUJBRFpGLEtBRUpHLGNBQWdCRCxFQUFFLG1CQUczQkgsS0FBS0ssVUFBVUMsSUFBTSxXQUNqQixJQUFJQyxFQUFPTixLQUNYTSxFQUFLQyxzQkFDTEQsRUFBS0Usb0JBQ0xGLEVBQUtHLHFCQUdUVixLQUFLSyxVQUFVTSxVQUFZLFdBQ1pWLEtBQ05DLFlBQVlVLFFBR3JCWixLQUFLSyxVQUFVUSxVQUFZLFdBQ2RaLEtBQ05DLFlBQVlZLFFBR25CZCxLQUFLSyxVQUFVRyxvQkFBc0IsV0FDakMsSUFBSUQsRUFBT04sS0FDUGMsRUFBWVosRUFBRSxlQUNkYSxFQUFZYixFQUFFLGVBQ2RjLEVBQVdkLEVBQUUsY0FFakJZLEVBQVVHLE1BQU0sV0FDWlgsRUFBS0ksWUFDTEosRUFBS0gsY0FBY2UsSUFBSSxDQUFDQyxLQUFPLE1BRW5DSixFQUFVRSxNQUFNLFdBQ1pYLEVBQUtJLFlBQ0xKLEVBQUtILGNBQWNlLElBQUksQ0FBQ0MsTUFBUSxRQUVwQ0gsRUFBU0MsTUFBTSxXQUNYWCxFQUFLTSxlQUtiYixLQUFLSyxVQUFVSSxrQkFBb0IsV0FDL0IsSUFBSUYsRUFBT04sS0FDSUUsRUFBRSxXQUNSZSxNQUFNLFdBQ1gsSUFBSUcsRUFBY2QsRUFBS0gsY0FBY2UsSUFBSSxTQUN6Q0UsRUFBY0MsU0FBU0QsSUFDTixFQUViZCxFQUFLSCxjQUFjbUIsUUFBUSxDQUFDSCxLQUFPLE1BR25DYixFQUFLSCxjQUFjbUIsUUFBUSxDQUFDSCxLQUFPLGNBSy9DcEIsS0FBS0ssVUFBVUssa0JBQW9CLFdBQy9CLElBQUljLEVBQWNyQixFQUFFLGlCQUNoQnNCLEVBQWlCRCxFQUFZRSxLQUFLLDJCQUNsQ0MsRUFBZ0JILEVBQVlFLEtBQUssMEJBQ2pDRSxFQUFnQkosRUFBWUUsS0FBSywwQkFFckJGLEVBQVlFLEtBQUssZUFDdkJSLE1BQU0sV0FDWixJQUFJVyxFQUFZSixFQUFlSyxNQUMzQkMsRUFBV0osRUFBY0csTUFDekJFLEVBQVdKLEVBQWNLLEtBQUssV0FFbENDLFFBQVFDLEtBQUssQ0FDVEMsSUFBTyxrQkFDUEMsS0FBTyxDQUNIUixVQUFhQSxFQUNiRSxTQUFZQSxFQUNaQyxTQUFZQSxFQUFTLEVBQUUsR0FFM0JNLFFBQVcsU0FBVUMsR0FDakJDLFFBQVFDLElBQUksaUJBQ1pELFFBQVFDLElBQUlGLEdBQ1pDLFFBQVFDLElBQUksa0JBRWhCQyxLQUFRLFNBQVVDLEdBQ2JILFFBQVFDLElBQUksbUJBQ2JELFFBQVFDLElBQUlFLEdBQ1hILFFBQVFDLElBQUkseUJBTTdCdEMsRUFBRSxZQUNhLElBQUlILE1BQ1ZNIiwiZmlsZSI6ImF1dGgubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmZ1bmN0aW9uIEF1dGgoKSB7XHJcbiAgICB2YXIgc2VsZj10aGlzO1xyXG4gICAgc2VsZi5tYXNrV3JhcHBlciA9ICQoJy5tYXNrLXdyYXBwZXInKTtcclxuICAgIHNlbGYuc2Nyb2xsV3JhcHBlciA9ICQoJy5zY3JvbGwtd3JhcHBlcicpO1xyXG59XHJcblxyXG5BdXRoLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICBzZWxmLmxpc3RlblNob3dIaWRlRXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuU3dpdGNoRXZlbnQoKTtcclxuICAgIHNlbGYubGlzdGVuU2lnbmluRXZlbnQoKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLnNob3dFdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYubWFza1dyYXBwZXIuc2hvdygpO1xyXG59O1xyXG5cclxuQXV0aC5wcm90b3R5cGUuaGlkZUV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhciBzZWxmID0gdGhpcztcclxuICBzZWxmLm1hc2tXcmFwcGVyLmhpZGUoKTtcclxufTtcclxuXHJcbkF1dGgucHJvdG90eXBlLmxpc3RlblNob3dIaWRlRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgc2lnbmluQnRuID0gJCgnLnNpZ25pbi1idG4nKTtcclxuICAgIHZhciBzaWdudXBCdG4gPSAkKCcuc2lnbnVwLWJ0bicpO1xyXG4gICAgdmFyIGNsb3NlQnRuID0gJCgnLmNsb3NlLWJ0bicpO1xyXG5cclxuICAgIHNpZ25pbkJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5zaG93RXZlbnQoKTtcclxuICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKHtcImxlZnRcIjowfSk7XHJcbiAgICB9KTtcclxuICAgIHNpZ251cEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5zaG93RXZlbnQoKTtcclxuICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKHtcImxlZnRcIjotNDAwfSk7XHJcbiAgICB9KTtcclxuICAgIGNsb3NlQnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBzZWxmLmhpZGVFdmVudCgpO1xyXG4gICAgfSk7XHJcblxyXG59O1xyXG5cclxuQXV0aC5wcm90b3R5cGUubGlzdGVuU3dpdGNoRXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgc3dpdGNoZXIgPSAkKFwiLnN3aXRjaFwiKTtcclxuICAgIHN3aXRjaGVyLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgY3VycmVudExlZnQgPSBzZWxmLnNjcm9sbFdyYXBwZXIuY3NzKFwibGVmdFwiKTtcclxuICAgICAgICBjdXJyZW50TGVmdCA9IHBhcnNlSW50KGN1cnJlbnRMZWZ0KTtcclxuICAgICAgICBpZihjdXJyZW50TGVmdCA8IDApXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzZWxmLnNjcm9sbFdyYXBwZXIuYW5pbWF0ZSh7XCJsZWZ0XCI6JzAnfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHNlbGYuc2Nyb2xsV3JhcHBlci5hbmltYXRlKHtcImxlZnRcIjpcIi00MDBweFwifSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcblxyXG5BdXRoLnByb3RvdHlwZS5saXN0ZW5TaWduaW5FdmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzaWduaW5Hcm91cCA9ICQoJy5zaWduaW4tZ3JvdXAnKTtcclxuICAgIHZhciB0ZWxlcGhvbmVJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSd0ZWxlcGhvbmUnXVwiKTtcclxuICAgIHZhciBwYXNzd29yZElucHV0ID0gc2lnbmluR3JvdXAuZmluZChcImlucHV0W25hbWU9J3Bhc3N3b3JkJ11cIik7XHJcbiAgICB2YXIgcmVtZW1iZXJJbnB1dCA9IHNpZ25pbkdyb3VwLmZpbmQoXCJpbnB1dFtuYW1lPSdyZW1lbWJlciddXCIpO1xyXG5cclxuICAgIHZhciBzdWJtaXRCdG4gPSBzaWduaW5Hcm91cC5maW5kKCcuc3VibWl0LWJ0bicpO1xyXG4gICAgc3VibWl0QnRuLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgdGVsZXBob25lID0gdGVsZXBob25lSW5wdXQudmFsKCk7XHJcbiAgICAgICAgdmFyIHBhc3N3b3JkID0gcGFzc3dvcmRJbnB1dC52YWwoKTtcclxuICAgICAgICB2YXIgcmVtZW1iZXIgPSByZW1lbWJlcklucHV0LnByb3AoXCJjaGVja2VkXCIpO1xyXG5cclxuICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAndXJsJzogJy9hY2NvdW50L2xvZ2luLycsXHJcbiAgICAgICAgICAgICdkYXRhJzp7XHJcbiAgICAgICAgICAgICAgICAndGVsZXBob25lJzogdGVsZXBob25lLFxyXG4gICAgICAgICAgICAgICAgJ3Bhc3N3b3JkJzogcGFzc3dvcmQsXHJcbiAgICAgICAgICAgICAgICAncmVtZW1iZXInOiByZW1lbWJlcj8xOjBcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnPT09PT09PT09PT09PScpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCc9PT09PT09PT09PT09Jyk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICdmYWlsJzogZnVuY3Rpb24gKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3h4eHh4eHh4eHh4eHh4eCcpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd4eHh4eHh4eHh4eHh4eHgnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSlcclxufTtcclxuXHJcbiQoZnVuY3Rpb24oKXtcclxuICAgIHZhciBhdXRoID0gbmV3IEF1dGgoKTtcclxuICAgIGF1dGgucnVuKCk7XHJcbn0pOyJdfQ==
