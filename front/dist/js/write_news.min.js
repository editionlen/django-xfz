function News(){}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.listenUploadFielEvent=function(){var n=$("#thumbnail-btn");n.change(function(){var e=n[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.listenQiniuUploadFileEvent=function(){var r=this;$("#thumbnail-btn").change(function(){var a=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200===e.code){var t=e.data.token,n=(new Date).getTime()+"."+a.name.split(".")[1],o={fname:n,params:{},mimeType:["image/png","image/jpeg","image/gif","video/mp4"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(a,n,t,o,i).subscribe({next:r.handleFileUploadProgress,error:r.handleFileUploadError,complete:r.handleFileUploadComplete})}}})})},News.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";News.progressGroup.show();var n=$(".progress-bar");n.css({width:t}),n.text(t)},News.prototype.handleFileUploadError=function(e){console.log(e.message)},News.prototype.handleFileUploadComplete=function(e){console.log(e),News.progressGroup.hide();var t="http://q036lyvu6.bkt.clouddn.com/"+e.key;$("input[name='thumbnail']").val(t)},News.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$("input[name='title']").val(),n=$("select[name='category']").val(),o=$("input[name='desc']").val(),i=$("input[name='thumbnail']").val(),a=window.ue.getContent();xfzajax.post({url:"/cms/write_news/",data:{title:t,category:n,desc:o,thumbnail:i,content:a},success:function(e){200===e.code&&xfzalert.alertSuccess("恭喜！新闻发表成功！",function(){window.location.reload()})}})})},News.prototype.run=function(){var e=this;e.initUEditor(),e.listenQiniuUploadFileEvent(),e.listenSubmitEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
